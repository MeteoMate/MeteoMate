########################################
# MeteoMate â€” Environment configuration
# This file is auto-loaded by Docker Compose.
# Conventions:
# - Do NOT quote values.
# - Hostnames: no scheme (use "example.com", not "https://example.com").
# - Ports: numeric only.
# - Service names must match docker-compose service names (for Docker DNS to work).
########################################


############################
# Reverse proxy (NGINX) -> API (Flask Application)
############################
# Docker Compose service name for the API container (it is the in-network DNS name)
API_UPSTREAM_HOST=meteomate_api

# Port exposed by the API container
API_UPSTREAM_PORT=5000

# Requests with this path prefix are proxied to the API.
# Keep BOTH a leading and trailing slash (e.g., "/api/v1/").
API_PREFIX=/api/v1/


############################
# Public hostnames & NGINX ports
############################
# Public hostname used by NGINX in production and development
# (used for Host header/CORS and constructing dev URLs).
SERVER_NAME_PROD=meteomate.sdu.dk
SERVER_NAME_DEV=localhost

# External ports NGINX listens on in production and development
NGINX_PORT_PROD=443
NGINX_PORT_DEV=80


############################
# React (Create React App) -- development settings only
############################
# Docker Compose service name for the React dev server container (it is the in-network DNS name)
REACT_APP_UPSTREAM_HOST_DEV=meteomate_react

# Port exposed by the React dev server container (enabling hot reload).
REACT_APP_UPSTREAM_PORT_DEV=3000


############################
# Database (PostgreSQL / PostGIS)
############################
# Application DB credentials
POSTGRES_USER=meteomate_user
POSTGRES_PASSWORD=meteomate_password
POSTGRES_DB=meteomate_database

## CHANGE if you would like to place the data directory somewhere else.
POSTGRES_DB_LOCAL_DIR= 
# Docker Compose service name for the PostGIS container (it is the in-network DNS name)
POSTGRES_HOST=meteomate_postgis

# Port exposed by Postgres
POSTGRES_PORT=5432